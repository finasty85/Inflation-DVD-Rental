---IN THIS QUERY, WE LOOK AT DIFFERENT WAYS WE CAN SEE CONNECTIONS BETWEEN FILMS, STORES AND THE CUSTOMERS WHO RENT THE FILMS---

---THIS SHOWS HOW MANY TIMES EACH PERSON HAS RENTED---

SELECT CUSTOMER.FIRST_NAME, CUSTOMER.LAST_NAME, CUSTOMER.STORE_ID, COUNT(INVENTORY.INVENTORY_ID) FROM CUSTOMER
LEFT JOIN INVENTORY
ON CUSTOMER.STORE_ID=INVENTORY.STORE_ID
GROUP BY CUSTOMER.FIRST_NAME, CUSTOMER.LAST_NAME, CUSTOMER.STORE_ID
ORDER BY CUSTOMER.LAST_NAME ASC;

---AS WE CAN SEE FROM THIS EXAMPLE, LEFT JOIN AND INNER JOIN PRODUCE THE SAME RESULTS. THIS IS BECAUSE EVERY DATA POINT IS ACCOUNTED FOR---

SELECT CUSTOMER.FIRST_NAME, CUSTOMER.LAST_NAME FROM CUSTOMER
INNER JOIN INVENTORY
ON CUSTOMER.STORE_ID=INVENTORY.STORE_ID
GROUP BY CUSTOMER.FIRST_NAME, CUSTOMER.LAST_NAME
ORDER BY CUSTOMER.LAST_NAME ASC;

---THIS ADDS IN THE NULL MOVIES WHERE THEY ARE CHECKED OUT AND NOT IN THE INVENTORY---

SELECT FILM.FILM_ID, FILM.TITLE, INVENTORY_ID FROM FILM
LEFT JOIN INVENTORY
ON INVENTORY.FILM_ID = FILM.FILM_ID;

---THIS ONLY OBSERVES THE MOVIES THAT ARE IN THE INVENTORY AT THE STORE AND CLEARS OUT THE ONES THAT ARE CHECKED OUT---

SELECT FILM.FILM_ID, FILM.TITLE, INVENTORY_ID FROM FILM
INNER JOIN INVENTORY
ON INVENTORY.FILM_ID = FILM.FILM_ID;

---THIS SHOWS THE RESULT OF HOW MANY MOVIES HAVE BEEN CHECKED OUT. SO, 42 MOVIES HAVE BEEN CHECKED OUT---

SELECT FILM.FILM_ID, FILM.TITLE, INVENTORY_ID FROM FILM
LEFT JOIN INVENTORY
ON INVENTORY.FILM_ID = FILM.FILM_ID
WHERE INVENTORY.FILM_ID IS NULL;

---WHAT THIS DOES IS FINDS OUT HOW MANY OF EACH MOVIE HAS CERTAIN RATINGS. THIS CAN BE DONE BY A CASE CLAUSE---

SELECT 
SUM(CASE rating
	WHEN 'G' THEN 1 
	ELSE 0 
END) AS G,
SUM(CASE rating
	WHEN 'PG' THEN 1 
	ELSE 0 
END) AS PG,
SUM(CASE rating
	WHEN 'PG-13' THEN 1 
	ELSE 0 
END) AS PG13,
SUM(CASE rating
	WHEN 'R' THEN 1 
	ELSE 0 
END) AS R,
SUM(CASE rating
	WHEN 'NC-17' THEN 1 
	ELSE 0 
END) AS NC17
FROM film

